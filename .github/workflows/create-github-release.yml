# .github/workflows/create-github-release.yml
name: ðŸš€ Create GitHub Release
on:
  pull_request:
    types: [closed]
    branches: [master]

permissions:
  contents: write         # pozwala na odczyt/zapis kodu i tagÃ³w
  issues: write           # pozwala na komentowanie issue/pr
  pull-requests: write    # pozwala na modyfikowanie PR

jobs:
  release:
    # tylko jeÅ›li PR byÅ‚ zmergowany
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - name: Checkout full history
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: Import GPG key
        run: |
          echo "${{ secrets.GPG_PRIVATE_KEY }}" | gpg --batch --import
          echo "use-agent" >> ~/.gnupg/gpg.conf
          echo "pinentry-mode loopback" >> ~/.gnupg/gpg.conf
          echo "allow-loopback-pinentry" >> ~/.gnupg/gpg-agent.conf
          echo RELOADAGENT | gpg-connect-agent
        shell: bash           
      - name: Set Git to sign commits
        run: |
          git config --global user.name "B3D CI/CD"
          git config --global user.email "mo@b3d.com.pl"
          git config --global commit.gpgsign true
          git config --global user.signingkey 1BBE0FE0B65C2C04
          git config --global gpg.program gpg               

      - name: Create GitHub Release
        uses: google-github-actions/release-please-action@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          release-type: node            # dopasuj do swojego projektu
          # teraz robimy prawdziwy Release na GitHubie
          skip-github-release: false